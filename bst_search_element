/*
 18.) Write a C++ program to create a Binary Search Tree for N nodes, and search a given
      element.
*/

#include <iostream>
using namespace std;
struct node
{
    int data;
    node*left,*right;
};

class bst
{
    node*root;
    public:
    bst(){root=NULL;}
    void create(int arr[],int N)
    {
     node *parent,*nn,*temp;
     for(int i=0;i<N;i++)
     {
     nn=new node;
     
     if(nn==NULL)
     {
        cout<<"\nNo memory left....";
        return;
     }
     
        //node formulation
         nn->data=arr[i];
         nn->left=NULL;
         nn->right=NULL;
         
         if(root==NULL)
         {
             root=nn;
             continue;
         }
        temp=root;
         
        //finding appropriate location of node
        while(temp!=NULL)
        {
            parent=temp;
            if(nn->data>temp->data)
            {
                temp=temp->right;
            }
            else
            temp=temp->left;
        }
        
        //put that data at it's correct location 
        if(nn->data > parent->data)
        {
            parent->right=nn;
        }
        else
        parent->left=nn;
    }
     cout<<"\nThe specified Binary Search Tree is created ";
    }
    
    void Fbst(int key)
    {
        node*temp=root;
        //finding appropriate location of node
        while(temp!=NULL && temp->data!=key)
        {
            if(temp->data>key)
            {
                temp=temp->left;
            }
            if(temp->data<key)
            {
            temp=temp->right;
            }
        }
        if(temp==NULL)
        {
            cout<<"\nThe key not found";
            return;
        }
        cout<<"\nThe key found";
    }
};

int main()
{
    bst b;
    int n;
    cout<<"\nEnter the number of nodes you want to create in bst: ";
    cin>>n;
    int arr[n];
    cout<<"\nEnter the data elements of bst respectively: ";
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    b.create(arr,n);
    
    int key;
    cout<<"\nEnter the key you want to search in the given BST: ";
    cin>>key;
    b.Fbst(key);
}
