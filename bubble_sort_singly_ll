/* 10  Write a C++ program to store N elements in a singly linked list and perform Bubble sort.
*/

#include <iostream>
using namespace std;
struct node
{
    int data;
    node*link;
};

class Llist
{
    node*head;
    public:
    Llist(){head=NULL;}
    void create(int n)
    {
        node *nn,*t;
        for(int i=0;i<n;i++)
        {
           nn=new node;
           if(nn==NULL)
           {
               cout<<"\nNo memory left...";
               return;
           }
           cout<<"\nEnter the data for "<<i+1<<" node: ";
           cin>>nn->data;
           if(i==0)
           {
               head=nn;
               t=nn;
               continue;
           }
           t->link=nn;
           t=nn;
        }
        cout<<"\nThe prescribed singly linked list created...";
    }
    
    void disp()
    {
        cout<<"\nThe linked list created is given below:\n ";
        for(node*t=head;t!=NULL;t=t->link)
        {
            cout<<t->data<<" ";
        }
    }
    
    void Bsort() {
        if (head == NULL || head->link == NULL) {
            return; // Empty or single-node list is already sorted
        }

        bool swapped;
        node* ptr1;
        node* lptr = NULL;

        do {
            swapped = false;
            ptr1 = head;

            while (ptr1->link != lptr) {
                if (ptr1->data > ptr1->link->data) {
                    // Swap data
                    swap(ptr1->data, ptr1->link->data);
                    swapped = true;
                }
                ptr1 = ptr1->link;
            }
            lptr = ptr1; // Last node sorted
        } while (swapped);

        cout << "\nThe linked list has been sorted using Bubble Sort.\n";
    }
};

int main()
{
    int n;
    cout<<"\nEnter the number of nodes you want to create in singly linked list: ";
    cin>>n;
    Llist l;
    l.create(n);
    l.disp();
    l.Bsort();
    l.disp();
}
